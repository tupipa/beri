//
// Generated by Bluespec Compiler, version 2019.05.beta2 (build a88bf40, 2019-05-24)
//
// On Sun Mar 22 01:21:05 UTC 2020
//
//
// Ports:
// Name                         I/O  size props
// RDY_putIrqs                    O     1 const
// extMemory_request_canGet       O     1
// extMemory_request_peek         O   350
// RDY_extMemory_request_peek     O     1
// extMemory_request_get          O   350
// RDY_extMemory_request_get      O     1
// extMemory_response_canPut      O     1
// RDY_extMemory_response_put     O     1
// RDY_debugStream_0_request_put  O     1 reg
// debugStream_0_response_get     O     8 reg
// RDY_debugStream_0_response_get  O     1 reg
// pic_0_slave_request_canPut     O     1 reg
// RDY_pic_0_slave_request_put    O     1 reg
// pic_0_slave_response_canGet    O     1 reg
// pic_0_slave_response_peek      O    78
// RDY_pic_0_slave_response_peek  O     1 reg
// pic_0_slave_response_get       O    78
// RDY_pic_0_slave_response_get   O     1 reg
// reset_n                        O     1 reg
// RDY_reset_n                    O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// putIrqs_interruptLines         I    32
// extMemory_response_put_val     I   270
// debugStream_0_request_put      I     8 reg
// pic_0_slave_request_put_val    I   134
// EN_putIrqs                     I     1 inhigh
// EN_extMemory_response_put      I     1
// EN_debugStream_0_request_put   I     1
// EN_pic_0_slave_request_put     I     1
// EN_extMemory_request_get       I     1
// EN_debugStream_0_response_get  I     1
// EN_pic_0_slave_response_get    I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkCheri(CLK,
	       RST_N,

	       putIrqs_interruptLines,
	       EN_putIrqs,
	       RDY_putIrqs,

	       extMemory_request_canGet,

	       extMemory_request_peek,
	       RDY_extMemory_request_peek,

	       EN_extMemory_request_get,
	       extMemory_request_get,
	       RDY_extMemory_request_get,

	       extMemory_response_canPut,

	       extMemory_response_put_val,
	       EN_extMemory_response_put,
	       RDY_extMemory_response_put,

	       debugStream_0_request_put,
	       EN_debugStream_0_request_put,
	       RDY_debugStream_0_request_put,

	       EN_debugStream_0_response_get,
	       debugStream_0_response_get,
	       RDY_debugStream_0_response_get,

	       pic_0_slave_request_canPut,

	       pic_0_slave_request_put_val,
	       EN_pic_0_slave_request_put,
	       RDY_pic_0_slave_request_put,

	       pic_0_slave_response_canGet,

	       pic_0_slave_response_peek,
	       RDY_pic_0_slave_response_peek,

	       EN_pic_0_slave_response_get,
	       pic_0_slave_response_get,
	       RDY_pic_0_slave_response_get,

	       reset_n,
	       RDY_reset_n);
  input  CLK;
  input  RST_N;

  // action method putIrqs
  input  [31 : 0] putIrqs_interruptLines;
  input  EN_putIrqs;
  output RDY_putIrqs;

  // value method extMemory_request_canGet
  output extMemory_request_canGet;

  // value method extMemory_request_peek
  output [349 : 0] extMemory_request_peek;
  output RDY_extMemory_request_peek;

  // actionvalue method extMemory_request_get
  input  EN_extMemory_request_get;
  output [349 : 0] extMemory_request_get;
  output RDY_extMemory_request_get;

  // value method extMemory_response_canPut
  output extMemory_response_canPut;

  // action method extMemory_response_put
  input  [269 : 0] extMemory_response_put_val;
  input  EN_extMemory_response_put;
  output RDY_extMemory_response_put;

  // action method debugStream_0_request_put
  input  [7 : 0] debugStream_0_request_put;
  input  EN_debugStream_0_request_put;
  output RDY_debugStream_0_request_put;

  // actionvalue method debugStream_0_response_get
  input  EN_debugStream_0_response_get;
  output [7 : 0] debugStream_0_response_get;
  output RDY_debugStream_0_response_get;

  // value method pic_0_slave_request_canPut
  output pic_0_slave_request_canPut;

  // action method pic_0_slave_request_put
  input  [133 : 0] pic_0_slave_request_put_val;
  input  EN_pic_0_slave_request_put;
  output RDY_pic_0_slave_request_put;

  // value method pic_0_slave_response_canGet
  output pic_0_slave_response_canGet;

  // value method pic_0_slave_response_peek
  output [77 : 0] pic_0_slave_response_peek;
  output RDY_pic_0_slave_response_peek;

  // actionvalue method pic_0_slave_response_get
  input  EN_pic_0_slave_response_get;
  output [77 : 0] pic_0_slave_response_get;
  output RDY_pic_0_slave_response_get;

  // value method pic_0_getIrqs

  // value method reset_n
  output reset_n;
  output RDY_reset_n;

  // signals for module outputs
  wire [349 : 0] extMemory_request_get, extMemory_request_peek;
  wire [77 : 0] pic_0_slave_response_get, pic_0_slave_response_peek;
  wire [7 : 0] debugStream_0_response_get;
  wire RDY_debugStream_0_request_put,
       RDY_debugStream_0_response_get,
       RDY_extMemory_request_get,
       RDY_extMemory_request_peek,
       RDY_extMemory_response_put,
       RDY_pic_0_slave_request_put,
       RDY_pic_0_slave_response_get,
       RDY_pic_0_slave_response_peek,
       RDY_putIrqs,
       RDY_reset_n,
       extMemory_request_canGet,
       extMemory_response_canPut,
       pic_0_slave_request_canPut,
       pic_0_slave_response_canGet,
       reset_n;

  // register count
  reg [47 : 0] count;
  wire [47 : 0] count$D_IN;
  wire count$EN;

  // register pause
  reg pause;
  wire pause$D_IN, pause$EN;

  // ports of submodule beri
  wire [349 : 0] beri$memory_request_get, beri$memory_request_peek;
  wire [269 : 0] beri$memory_response_put_val,
		 beri$mipsMemory_memory_response_put_val;
  wire [258 : 0] beri$mipsMemory_dataMemory_startMem_sizedData;
  wire [63 : 0] beri$mipsMemory_dataMemory_getResponse_oldReg,
		beri$mipsMemory_dataMemory_startMem_addr,
		beri$mipsMemory_instructionMemory_reqInstruction_addr;
  wire [47 : 0] beri$putState_count;
  wire [33 : 0] beri$mipsMemory_instructionMemory_reqInstruction_inst;
  wire [11 : 0] beri$mipsMemory_statCounters_request_put;
  wire [7 : 0] beri$debugStream_request_put,
	       beri$debugStream_response_get,
	       beri$mipsMemory_dataMemory_getResponse_addr,
	       beri$mipsMemory_dataMemory_startMem_cop;
  wire [4 : 0] beri$putState_interruptLines;
  wire [3 : 0] beri$mipsMemory_dataMemory_getResponse_size,
	       beri$mipsMemory_dataMemory_startMem_instId,
	       beri$mipsMemory_dataMemory_startMem_size,
	       beri$mipsMemory_instructionMemory_reqInstruction_instId;
  wire [2 : 0] beri$mipsMemory_dataMemory_startMem_epoch,
	       beri$mipsMemory_dataMemory_startMem_mop;
  wire beri$EN_debugStream_request_put,
       beri$EN_debugStream_response_get,
       beri$EN_memory_request_get,
       beri$EN_memory_response_put,
       beri$EN_mipsMemory_dataMemory_getResponse,
       beri$EN_mipsMemory_dataMemory_startMem,
       beri$EN_mipsMemory_instructionMemory_getInstruction,
       beri$EN_mipsMemory_instructionMemory_reqInstruction,
       beri$EN_mipsMemory_memory_request_get,
       beri$EN_mipsMemory_memory_response_put,
       beri$EN_mipsMemory_nextWillCommit,
       beri$EN_mipsMemory_statCounters_commitReset,
       beri$EN_mipsMemory_statCounters_request_put,
       beri$EN_mipsMemory_statCounters_response_get,
       beri$RDY_debugStream_request_put,
       beri$RDY_debugStream_response_get,
       beri$RDY_getPause,
       beri$RDY_memory_request_get,
       beri$RDY_memory_request_peek,
       beri$RDY_memory_response_put,
       beri$getPause,
       beri$memory_request_canGet,
       beri$memory_response_canPut,
       beri$mipsMemory_dataMemory_getResponse_cacheOpResponse,
       beri$mipsMemory_dataMemory_getResponse_exception,
       beri$mipsMemory_dataMemory_getResponse_signExtend,
       beri$mipsMemory_dataMemory_startMem_cap,
       beri$mipsMemory_dataMemory_startMem_fromDebug,
       beri$mipsMemory_dataMemory_startMem_ll,
       beri$mipsMemory_dataMemory_startMem_storeConditional,
       beri$mipsMemory_nextWillCommit_commiting,
       beri$mipsMemory_statCounters_commitReset_c,
       beri$putState_pause,
       beri$reset_n;

  // ports of submodule myPIC
  wire [133 : 0] myPIC$regs_slave_request_put_val;
  wire [77 : 0] myPIC$regs_slave_response_get, myPIC$regs_slave_response_peek;
  wire [31 : 0] myPIC$irqMapper_putExtIrqs_irqs;
  wire [7 : 0] myPIC$irqMapper_getMIPSIrqs;
  wire myPIC$EN_regs_slave_request_put,
       myPIC$EN_regs_slave_response_get,
       myPIC$RDY_regs_slave_request_put,
       myPIC$RDY_regs_slave_response_get,
       myPIC$RDY_regs_slave_response_peek,
       myPIC$regs_slave_request_canPut,
       myPIC$regs_slave_response_canGet;

  // remaining internal signals
  reg [2 : 0] CASE_extMemory_response_put_val_BITS_259_TO_25_ETC__q5,
	      CASE_myPICregs_slave_response_get_BITS_67_TO__ETC__q1,
	      CASE_myPICregs_slave_response_peek_BITS_67_TO_ETC__q2;
  reg [1 : 0] CASE_berimemory_request_get_BITS_301_TO_300_0_ETC__q3,
	      CASE_berimemory_request_peek_BITS_301_TO_300__ETC__q4,
	      CASE_pic_0_slave_request_put_val_BITS_85_TO_84_ETC__q6;

  // action method putIrqs
  assign RDY_putIrqs = 1'd1 ;

  // value method extMemory_request_canGet
  assign extMemory_request_canGet = beri$memory_request_canGet ;

  // value method extMemory_request_peek
  assign extMemory_request_peek =
	     { beri$memory_request_peek[349:302],
	       CASE_berimemory_request_peek_BITS_301_TO_300__ETC__q4,
	       beri$memory_request_peek[299:0] } ;
  assign RDY_extMemory_request_peek = beri$RDY_memory_request_peek ;

  // actionvalue method extMemory_request_get
  assign extMemory_request_get =
	     { beri$memory_request_get[349:302],
	       CASE_berimemory_request_get_BITS_301_TO_300_0_ETC__q3,
	       beri$memory_request_get[299:0] } ;
  assign RDY_extMemory_request_get = beri$RDY_memory_request_get ;

  // value method extMemory_response_canPut
  assign extMemory_response_canPut = beri$memory_response_canPut ;

  // action method extMemory_response_put
  assign RDY_extMemory_response_put = beri$RDY_memory_response_put ;

  // action method debugStream_0_request_put
  assign RDY_debugStream_0_request_put = beri$RDY_debugStream_request_put ;

  // actionvalue method debugStream_0_response_get
  assign debugStream_0_response_get = beri$debugStream_response_get ;
  assign RDY_debugStream_0_response_get = beri$RDY_debugStream_response_get ;

  // value method pic_0_slave_request_canPut
  assign pic_0_slave_request_canPut = myPIC$regs_slave_request_canPut ;

  // action method pic_0_slave_request_put
  assign RDY_pic_0_slave_request_put = myPIC$RDY_regs_slave_request_put ;

  // value method pic_0_slave_response_canGet
  assign pic_0_slave_response_canGet = myPIC$regs_slave_response_canGet ;

  // value method pic_0_slave_response_peek
  assign pic_0_slave_response_peek =
	     { myPIC$regs_slave_response_peek[77:68],
	       CASE_myPICregs_slave_response_peek_BITS_67_TO_ETC__q2,
	       myPIC$regs_slave_response_peek[64:0] } ;
  assign RDY_pic_0_slave_response_peek = myPIC$RDY_regs_slave_response_peek ;

  // actionvalue method pic_0_slave_response_get
  assign pic_0_slave_response_get =
	     { myPIC$regs_slave_response_get[77:68],
	       CASE_myPICregs_slave_response_get_BITS_67_TO__ETC__q1,
	       myPIC$regs_slave_response_get[64:0] } ;
  assign RDY_pic_0_slave_response_get = myPIC$RDY_regs_slave_response_get ;

  // value method reset_n
  assign reset_n = beri$reset_n ;
  assign RDY_reset_n = 1'd1 ;

  // submodule beri
  mkMIPSTop beri(.coreId(16'd0),
		 .CLK(CLK),
		 .RST_N(RST_N),
		 .debugStream_request_put(beri$debugStream_request_put),
		 .memory_response_put_val(beri$memory_response_put_val),
		 .mipsMemory_dataMemory_getResponse_addr(beri$mipsMemory_dataMemory_getResponse_addr),
		 .mipsMemory_dataMemory_getResponse_cacheOpResponse(beri$mipsMemory_dataMemory_getResponse_cacheOpResponse),
		 .mipsMemory_dataMemory_getResponse_exception(beri$mipsMemory_dataMemory_getResponse_exception),
		 .mipsMemory_dataMemory_getResponse_oldReg(beri$mipsMemory_dataMemory_getResponse_oldReg),
		 .mipsMemory_dataMemory_getResponse_signExtend(beri$mipsMemory_dataMemory_getResponse_signExtend),
		 .mipsMemory_dataMemory_getResponse_size(beri$mipsMemory_dataMemory_getResponse_size),
		 .mipsMemory_dataMemory_startMem_addr(beri$mipsMemory_dataMemory_startMem_addr),
		 .mipsMemory_dataMemory_startMem_cap(beri$mipsMemory_dataMemory_startMem_cap),
		 .mipsMemory_dataMemory_startMem_cop(beri$mipsMemory_dataMemory_startMem_cop),
		 .mipsMemory_dataMemory_startMem_epoch(beri$mipsMemory_dataMemory_startMem_epoch),
		 .mipsMemory_dataMemory_startMem_fromDebug(beri$mipsMemory_dataMemory_startMem_fromDebug),
		 .mipsMemory_dataMemory_startMem_instId(beri$mipsMemory_dataMemory_startMem_instId),
		 .mipsMemory_dataMemory_startMem_ll(beri$mipsMemory_dataMemory_startMem_ll),
		 .mipsMemory_dataMemory_startMem_mop(beri$mipsMemory_dataMemory_startMem_mop),
		 .mipsMemory_dataMemory_startMem_size(beri$mipsMemory_dataMemory_startMem_size),
		 .mipsMemory_dataMemory_startMem_sizedData(beri$mipsMemory_dataMemory_startMem_sizedData),
		 .mipsMemory_dataMemory_startMem_storeConditional(beri$mipsMemory_dataMemory_startMem_storeConditional),
		 .mipsMemory_instructionMemory_reqInstruction_addr(beri$mipsMemory_instructionMemory_reqInstruction_addr),
		 .mipsMemory_instructionMemory_reqInstruction_inst(beri$mipsMemory_instructionMemory_reqInstruction_inst),
		 .mipsMemory_instructionMemory_reqInstruction_instId(beri$mipsMemory_instructionMemory_reqInstruction_instId),
		 .mipsMemory_memory_response_put_val(beri$mipsMemory_memory_response_put_val),
		 .mipsMemory_nextWillCommit_commiting(beri$mipsMemory_nextWillCommit_commiting),
		 .mipsMemory_statCounters_commitReset_c(beri$mipsMemory_statCounters_commitReset_c),
		 .mipsMemory_statCounters_request_put(beri$mipsMemory_statCounters_request_put),
		 .putState_count(beri$putState_count),
		 .putState_interruptLines(beri$putState_interruptLines),
		 .putState_pause(beri$putState_pause),
		 .EN_memory_request_get(beri$EN_memory_request_get),
		 .EN_memory_response_put(beri$EN_memory_response_put),
		 .EN_debugStream_request_put(beri$EN_debugStream_request_put),
		 .EN_debugStream_response_get(beri$EN_debugStream_response_get),
		 .EN_mipsMemory_dataMemory_startMem(beri$EN_mipsMemory_dataMemory_startMem),
		 .EN_mipsMemory_dataMemory_getResponse(beri$EN_mipsMemory_dataMemory_getResponse),
		 .EN_mipsMemory_instructionMemory_reqInstruction(beri$EN_mipsMemory_instructionMemory_reqInstruction),
		 .EN_mipsMemory_instructionMemory_getInstruction(beri$EN_mipsMemory_instructionMemory_getInstruction),
		 .EN_mipsMemory_memory_request_get(beri$EN_mipsMemory_memory_request_get),
		 .EN_mipsMemory_memory_response_put(beri$EN_mipsMemory_memory_response_put),
		 .EN_mipsMemory_nextWillCommit(beri$EN_mipsMemory_nextWillCommit),
		 .EN_mipsMemory_statCounters_request_put(beri$EN_mipsMemory_statCounters_request_put),
		 .EN_mipsMemory_statCounters_response_get(beri$EN_mipsMemory_statCounters_response_get),
		 .EN_mipsMemory_statCounters_commitReset(beri$EN_mipsMemory_statCounters_commitReset),
		 .memory_request_canGet(beri$memory_request_canGet),
		 .memory_request_peek(beri$memory_request_peek),
		 .RDY_memory_request_peek(beri$RDY_memory_request_peek),
		 .memory_request_get(beri$memory_request_get),
		 .RDY_memory_request_get(beri$RDY_memory_request_get),
		 .memory_response_canPut(beri$memory_response_canPut),
		 .RDY_memory_response_put(beri$RDY_memory_response_put),
		 .getPause(beri$getPause),
		 .RDY_getPause(beri$RDY_getPause),
		 .RDY_debugStream_request_put(beri$RDY_debugStream_request_put),
		 .debugStream_response_get(beri$debugStream_response_get),
		 .RDY_debugStream_response_get(beri$RDY_debugStream_response_get),
		 .reset_n(beri$reset_n),
		 .RDY_reset_n(),
		 .RDY_mipsMemory_dataMemory_startMem(),
		 .mipsMemory_dataMemory_getResponse(),
		 .RDY_mipsMemory_dataMemory_getResponse(),
		 .RDY_mipsMemory_instructionMemory_reqInstruction(),
		 .mipsMemory_instructionMemory_getInstruction(),
		 .RDY_mipsMemory_instructionMemory_getInstruction(),
		 .mipsMemory_configuration_dCacheGetConfig(),
		 .RDY_mipsMemory_configuration_dCacheGetConfig(),
		 .mipsMemory_configuration_iCacheGetConfig(),
		 .RDY_mipsMemory_configuration_iCacheGetConfig(),
		 .mipsMemory_memory_request_canGet(),
		 .mipsMemory_memory_request_peek(),
		 .RDY_mipsMemory_memory_request_peek(),
		 .mipsMemory_memory_request_get(),
		 .RDY_mipsMemory_memory_request_get(),
		 .mipsMemory_memory_response_canPut(),
		 .RDY_mipsMemory_memory_response_put(),
		 .RDY_mipsMemory_nextWillCommit(),
		 .RDY_mipsMemory_statCounters_request_put(),
		 .mipsMemory_statCounters_response_get(),
		 .RDY_mipsMemory_statCounters_response_get(),
		 .RDY_mipsMemory_statCounters_commitReset());

  // submodule myPIC
  mkMyPIC myPIC(.CLK(CLK),
		.RST_N(RST_N),
		.irqMapper_putExtIrqs_irqs(myPIC$irqMapper_putExtIrqs_irqs),
		.regs_slave_request_put_val(myPIC$regs_slave_request_put_val),
		.EN_regs_slave_request_put(myPIC$EN_regs_slave_request_put),
		.EN_regs_slave_response_get(myPIC$EN_regs_slave_response_get),
		.irqMapper_getMIPSIrqs(myPIC$irqMapper_getMIPSIrqs),
		.regs_slave_request_canPut(myPIC$regs_slave_request_canPut),
		.RDY_regs_slave_request_put(myPIC$RDY_regs_slave_request_put),
		.regs_slave_response_canGet(myPIC$regs_slave_response_canGet),
		.regs_slave_response_peek(myPIC$regs_slave_response_peek),
		.RDY_regs_slave_response_peek(myPIC$RDY_regs_slave_response_peek),
		.regs_slave_response_get(myPIC$regs_slave_response_get),
		.RDY_regs_slave_response_get(myPIC$RDY_regs_slave_response_get));

  // register count
  assign count$D_IN = count + 48'd1 ;
  assign count$EN = !pause ;

  // register pause
  assign pause$D_IN = beri$getPause ;
  assign pause$EN = beri$RDY_getPause ;

  // submodule beri
  assign beri$debugStream_request_put = debugStream_0_request_put ;
  assign beri$memory_response_put_val =
	     { extMemory_response_put_val[269:260],
	       CASE_extMemory_response_put_val_BITS_259_TO_25_ETC__q5,
	       extMemory_response_put_val[256:0] } ;
  assign beri$mipsMemory_dataMemory_getResponse_addr = 8'h0 ;
  assign beri$mipsMemory_dataMemory_getResponse_cacheOpResponse = 1'b0 ;
  assign beri$mipsMemory_dataMemory_getResponse_exception = 1'b0 ;
  assign beri$mipsMemory_dataMemory_getResponse_oldReg = 64'h0 ;
  assign beri$mipsMemory_dataMemory_getResponse_signExtend = 1'b0 ;
  assign beri$mipsMemory_dataMemory_getResponse_size = 4'h0 ;
  assign beri$mipsMemory_dataMemory_startMem_addr = 64'h0 ;
  assign beri$mipsMemory_dataMemory_startMem_cap = 1'b0 ;
  assign beri$mipsMemory_dataMemory_startMem_cop = 8'h0 ;
  assign beri$mipsMemory_dataMemory_startMem_epoch = 3'h0 ;
  assign beri$mipsMemory_dataMemory_startMem_fromDebug = 1'b0 ;
  assign beri$mipsMemory_dataMemory_startMem_instId = 4'h0 ;
  assign beri$mipsMemory_dataMemory_startMem_ll = 1'b0 ;
  assign beri$mipsMemory_dataMemory_startMem_mop = 3'h0 ;
  assign beri$mipsMemory_dataMemory_startMem_size = 4'h0 ;
  assign beri$mipsMemory_dataMemory_startMem_sizedData = 259'h0 ;
  assign beri$mipsMemory_dataMemory_startMem_storeConditional = 1'b0 ;
  assign beri$mipsMemory_instructionMemory_reqInstruction_addr = 64'h0 ;
  assign beri$mipsMemory_instructionMemory_reqInstruction_inst = 34'h0 ;
  assign beri$mipsMemory_instructionMemory_reqInstruction_instId = 4'h0 ;
  assign beri$mipsMemory_memory_response_put_val = 270'h0 ;
  assign beri$mipsMemory_nextWillCommit_commiting = 1'b0 ;
  assign beri$mipsMemory_statCounters_commitReset_c = 1'b0 ;
  assign beri$mipsMemory_statCounters_request_put = 12'h0 ;
  assign beri$putState_count = count ;
  assign beri$putState_interruptLines = myPIC$irqMapper_getMIPSIrqs[4:0] ;
  assign beri$putState_pause = pause ;
  assign beri$EN_memory_request_get = EN_extMemory_request_get ;
  assign beri$EN_memory_response_put = EN_extMemory_response_put ;
  assign beri$EN_debugStream_request_put = EN_debugStream_0_request_put ;
  assign beri$EN_debugStream_response_get = EN_debugStream_0_response_get ;
  assign beri$EN_mipsMemory_dataMemory_startMem = 1'b0 ;
  assign beri$EN_mipsMemory_dataMemory_getResponse = 1'b0 ;
  assign beri$EN_mipsMemory_instructionMemory_reqInstruction = 1'b0 ;
  assign beri$EN_mipsMemory_instructionMemory_getInstruction = 1'b0 ;
  assign beri$EN_mipsMemory_memory_request_get = 1'b0 ;
  assign beri$EN_mipsMemory_memory_response_put = 1'b0 ;
  assign beri$EN_mipsMemory_nextWillCommit = 1'b0 ;
  assign beri$EN_mipsMemory_statCounters_request_put = 1'b0 ;
  assign beri$EN_mipsMemory_statCounters_response_get = 1'b0 ;
  assign beri$EN_mipsMemory_statCounters_commitReset = 1'b0 ;

  // submodule myPIC
  assign myPIC$irqMapper_putExtIrqs_irqs = putIrqs_interruptLines ;
  assign myPIC$regs_slave_request_put_val =
	     { pic_0_slave_request_put_val[133:86],
	       CASE_pic_0_slave_request_put_val_BITS_85_TO_84_ETC__q6,
	       pic_0_slave_request_put_val[83:0] } ;
  assign myPIC$EN_regs_slave_request_put = EN_pic_0_slave_request_put ;
  assign myPIC$EN_regs_slave_response_get = EN_pic_0_slave_response_get ;

  // remaining internal signals
  always@(myPIC$regs_slave_response_get)
  begin
    case (myPIC$regs_slave_response_get[67:66])
      2'd0, 2'd1:
	  CASE_myPICregs_slave_response_get_BITS_67_TO__ETC__q1 =
	      myPIC$regs_slave_response_get[67:65];
      default: CASE_myPICregs_slave_response_get_BITS_67_TO__ETC__q1 =
		   { 2'd2, myPIC$regs_slave_response_get[65] };
    endcase
  end
  always@(myPIC$regs_slave_response_peek)
  begin
    case (myPIC$regs_slave_response_peek[67:66])
      2'd0, 2'd1:
	  CASE_myPICregs_slave_response_peek_BITS_67_TO_ETC__q2 =
	      myPIC$regs_slave_response_peek[67:65];
      default: CASE_myPICregs_slave_response_peek_BITS_67_TO_ETC__q2 =
		   { 2'd2, myPIC$regs_slave_response_peek[65] };
    endcase
  end
  always@(beri$memory_request_get)
  begin
    case (beri$memory_request_get[301:300])
      2'd0, 2'd1:
	  CASE_berimemory_request_get_BITS_301_TO_300_0_ETC__q3 =
	      beri$memory_request_get[301:300];
      default: CASE_berimemory_request_get_BITS_301_TO_300_0_ETC__q3 = 2'd2;
    endcase
  end
  always@(beri$memory_request_peek)
  begin
    case (beri$memory_request_peek[301:300])
      2'd0, 2'd1:
	  CASE_berimemory_request_peek_BITS_301_TO_300__ETC__q4 =
	      beri$memory_request_peek[301:300];
      default: CASE_berimemory_request_peek_BITS_301_TO_300__ETC__q4 = 2'd2;
    endcase
  end
  always@(extMemory_response_put_val)
  begin
    case (extMemory_response_put_val[259:258])
      2'd0, 2'd1:
	  CASE_extMemory_response_put_val_BITS_259_TO_25_ETC__q5 =
	      extMemory_response_put_val[259:257];
      default: CASE_extMemory_response_put_val_BITS_259_TO_25_ETC__q5 =
		   { 2'd2, extMemory_response_put_val[257] };
    endcase
  end
  always@(pic_0_slave_request_put_val)
  begin
    case (pic_0_slave_request_put_val[85:84])
      2'd0, 2'd1:
	  CASE_pic_0_slave_request_put_val_BITS_85_TO_84_ETC__q6 =
	      pic_0_slave_request_put_val[85:84];
      default: CASE_pic_0_slave_request_put_val_BITS_85_TO_84_ETC__q6 = 2'd2;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        count <= `BSV_ASSIGNMENT_DELAY 48'b0;
	pause <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (count$EN) count <= `BSV_ASSIGNMENT_DELAY count$D_IN;
	if (pause$EN) pause <= `BSV_ASSIGNMENT_DELAY pause$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    count = 48'hAAAAAAAAAAAA;
    pause = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkCheri

